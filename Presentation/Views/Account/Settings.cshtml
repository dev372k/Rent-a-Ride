@model Business.DTOs.UpdateUserDTO

@{
    ViewData["Title"] = "Settings";
    Layout = "_DashboardLayout";
}


<div class="row mx-auto">
    <div class="col-md-12">
        <h1>Settings</h1>
        <form asp-action="Settings">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" value="@Model.Name" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Email" class="control-label"></label>
                        <input asp-for="Email" class="form-control" value="@Model.Email" disabled />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Address" class="control-label"></label>
                    <input type="text" asp-for="Address" class="form-control" value="@Model.Address" />
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="City" class="control-label"></label>
                        <input type="text" asp-for="City" class="form-control" value="@Model.City" />
                        <span asp-validation-for="City" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Country" class="control-label"></label>
                        <select asp-for="Country" class="form-control">

                        </select>
                        @* <input type="text" asp-for="Country" class="form-control" value="@Model.Country" /> *@
                        <span asp-validation-for="Country" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="d-grid my-2">
                <input type="submit" value="Save Changes" class="btn btn-outline-success" />
                <br />
                <span class="text-muted">By clicking "Save Changes" it will log you out</span>
            </div>
        </form>
    </div>
</div>


@section scripts {
    <script>
        $(document).ready(() => {
            // Check if countries are already stored in localStorage
            let countries = localStorage.getItem('countries');
            if (countries) {
                // If countries are stored, parse them from localStorage
                countries = JSON.parse(countries);
                // Bind countries to dropdown
                bindCountries(countries);
            } else {
                // If countries are not stored, fetch them from API
                fetch("https://restcountries.com/v3.1/all")
                    .then(response => response.json())
                    .then(result => {
                        // Extract country names and sort alphabetically
                        countries = result.map(country => country.name.common).sort();
                        // Store countries in localStorage
                        localStorage.setItem('countries', JSON.stringify(countries));
                        // Bind countries to dropdown
                        bindCountries(countries);
                    })
                    .catch(error => console.error('Error fetching countries:', error));
            }
        })


        // Function to bind countries to dropdown
        function bindCountries(countries) {
            const dropdown = document.getElementById('Country');
            // Clear existing options
            dropdown.innerHTML = '';
            // Add default option
            const defaultOption = document.createElement('option');
            defaultOption.value = '';
            defaultOption.text = 'Select Country';
            dropdown.appendChild(defaultOption);
            // Add countries to dropdown
            countries.forEach(country => {
                const option = document.createElement('option');
                option.value = country;
                option.text = country;
                dropdown.appendChild(option);
            });

            dropdown.value = '@Model.Country'
        }


    </script>
}